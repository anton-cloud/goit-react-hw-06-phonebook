{"version":3,"sources":["components/Filter/Filter.module.css","redux/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleChange","e","currentTarget","setState","value","handleSubmit","preventDefault","props","existContacts","some","element","alert","onSubmit","resetInput","this","className","styles","form","label","type","pattern","title","input","placeholder","onChange","required","btn","Component","connect","contacts","items","dispatch","data","actions","allContacts","normalizedFilter","toLowerCase","filter","includes","getVisibleContacts","onDeleteContact","list","map","item","info","onClick","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9855f1e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1lcUK\",\"input\":\"Filter_input__1D1oW\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport actions from \"../../redux/contactsActions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.currentTarget.name;\r\n    this.setState({\r\n      [name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContact = this.props.existContacts.some(\r\n      (element) => element.name === this.state.name\r\n    );\r\n\r\n    checkContact\r\n      ? alert(`${this.state.name} is already in contacts`)\r\n      : this.props.onSubmit(this.state);\r\n\r\n    this.resetInput();\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            className={styles.input}\r\n            placeholder=\"Jon Jonson\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  existContacts: state.contacts.items,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(actions.addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport actions from \"../../redux/contactsActions\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles.item} key={id}>\r\n        <p className={styles.info}>\r\n          {name}: {number}\r\n        </p>\r\n        <button\r\n          className={styles.btn}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter = \"\") => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  const visibleContacts = getVisibleContacts(items, filter);\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport actions from \"../../redux/contactsActions\";\r\n\r\nconst Filter = ({ onChange, value }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(actions.changeFilter(e.currentTarget.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from \"react\";\r\n\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nimport \"./styles.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contactsActions\";\r\n\r\nconst contacts = {\r\n  items: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst items = createReducer(contacts.items, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(contacts.filter, {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contactsReducer\";\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// reducer\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"Contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\n//middleware\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n//store\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nlet persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__wciNB\",\"label\":\"ContactForm_label__36F5Y\",\"input\":\"ContactForm_input__3zvHw\",\"btn\":\"ContactForm_btn__1X1rf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1iasl\",\"item\":\"ContactList_item__3z6jP\",\"btn\":\"ContactList_btn__3dVfN\"};"],"sourceRoot":""}